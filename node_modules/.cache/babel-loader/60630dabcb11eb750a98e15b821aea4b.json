{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/berry-free-react-admin-template-main/src/views/dashboard/Default/TradingCard.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { useState } from 'react'; // material-ui\n\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, Grid, FormControl, OutlinedInput, Typography, InputAdornment, FormHelperText } from '@mui/material'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard'; // assets\n\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardWrapper = styled(MainCard)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.secondary.dark,\n  color: '#fff',\n  overflow: 'hidden',\n  position: 'relative',\n  '&:after': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: theme.palette.secondary[800],\n    borderRadius: '50%',\n    top: -85,\n    right: -95,\n    [theme.breakpoints.down('sm')]: {\n      top: -105,\n      right: -140\n    }\n  },\n  '&:before': {\n    content: '\"\"',\n    position: 'absolute',\n    width: 210,\n    height: 210,\n    background: theme.palette.secondary[800],\n    borderRadius: '50%',\n    top: -125,\n    right: -15,\n    opacity: 0.5,\n    [theme.breakpoints.down('sm')]: {\n      top: -155,\n      right: -70\n    }\n  }\n})); // ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\n\nconst TradingCard = ({\n  isLoading\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const [values, setValues] = React.useState({\n    input: '',\n    output: ''\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonEarningCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(CardWrapper, {\n      border: false,\n      content: false,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2.25\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"space-between\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  sx: {\n                    m: 1,\n                    width: '25ch'\n                  },\n                  variant: \"outlined\",\n                  children: [/*#__PURE__*/_jsxDEV(OutlinedInput, {\n                    id: \"input-token\",\n                    value: values.input,\n                    onChange: handleChange('input'),\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: \"Token\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 63\n                    }, this),\n                    \"aria-describedby\": \"outlined-weight-helper-text\",\n                    inputProps: {\n                      'aria-label': 'weight'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    id: \"input-token\",\n                    children: \"Token\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              alignItems: \"center\",\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                sx: {\n                  m: 1,\n                  width: '25ch'\n                },\n                variant: \"outlined\",\n                children: [/*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  id: \"output-token\",\n                  value: values.output,\n                  onChange: handleChange('output'),\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: \"kg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 59\n                  }, this),\n                  inputProps: {\n                    'aria-label': 'Token'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  id: \"output-token\",\n                  children: \"token\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              mb: 1.25\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: '1rem',\n                fontWeight: 500,\n                color: theme.palette.secondary[200]\n              },\n              children: \"Total Earning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(TradingCard, \"yFw8qufe51wGsgRkjxCDuOiRXh0=\", false, function () {\n  return [useTheme];\n});\n\n_c = TradingCard;\nTradingCard.propTypes = {\n  isLoading: PropTypes.bool\n};\nexport default TradingCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TradingCard\");","map":{"version":3,"sources":["/Users/admin/Downloads/berry-free-react-admin-template-main/src/views/dashboard/Default/TradingCard.js"],"names":["PropTypes","React","useState","styled","useTheme","Avatar","Box","Grid","FormControl","OutlinedInput","Typography","InputAdornment","FormHelperText","MainCard","SkeletonEarningCard","ArrowUpwardIcon","CardWrapper","theme","backgroundColor","palette","secondary","dark","color","overflow","position","content","width","height","background","borderRadius","top","right","breakpoints","down","opacity","TradingCard","isLoading","values","setValues","input","output","handleChange","prop","event","target","value","p","m","mb","fontSize","fontWeight","propTypes","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { useState } from 'react';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, Grid, FormControl, OutlinedInput, Typography, InputAdornment, FormHelperText } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\n\n// assets\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: theme.palette.secondary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.secondary[800],\n        borderRadius: '50%',\n        top: -85,\n        right: -95,\n        [theme.breakpoints.down('sm')]: {\n            top: -105,\n            right: -140\n        }\n    },\n    '&:before': {\n        content: '\"\"',\n        position: 'absolute',\n        width: 210,\n        height: 210,\n        background: theme.palette.secondary[800],\n        borderRadius: '50%',\n        top: -125,\n        right: -15,\n        opacity: 0.5,\n        [theme.breakpoints.down('sm')]: {\n            top: -155,\n            right: -70\n        }\n    }\n}));\n\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\n\nconst TradingCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    const [values, setValues] = React.useState({\n        input: '',\n        output: ''\n    });\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonEarningCard />\n            ) : (\n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2.25 }}>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Grid container justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\">\n                                            <OutlinedInput\n                                                id=\"input-token\"\n                                                value={values.input}\n                                                onChange={handleChange('input')}\n                                                endAdornment={<InputAdornment position=\"end\">Token</InputAdornment>}\n                                                aria-describedby=\"outlined-weight-helper-text\"\n                                                inputProps={{\n                                                    'aria-label': 'weight'\n                                                }}\n                                            />\n                                            <FormHelperText id=\"input-token\">Token</FormHelperText>\n                                        </FormControl>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid container alignItems=\"center\">\n                                    <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\">\n                                        <OutlinedInput\n                                            id=\"output-token\"\n                                            value={values.output}\n                                            onChange={handleChange('output')}\n                                            endAdornment={<InputAdornment position=\"end\">kg</InputAdornment>}\n                                            inputProps={{\n                                                'aria-label': 'Token'\n                                            }}\n                                        />\n                                        <FormHelperText id=\"output-token\">token</FormHelperText>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                            <Grid item sx={{ mb: 1.25 }}>\n                                <Typography\n                                    sx={{\n                                        fontSize: '1rem',\n                                        fontWeight: 500,\n                                        color: theme.palette.secondary[200]\n                                    }}\n                                >\n                                    Total Earning\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n\nTradingCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TradingCard;\n"]},"metadata":{},"sourceType":"module"}